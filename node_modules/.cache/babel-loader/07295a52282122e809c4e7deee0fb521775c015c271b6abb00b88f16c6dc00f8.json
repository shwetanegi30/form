{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shweta\\\\form-app\\\\src\\\\Component\\\\File.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction File() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = File;\nexport default File;\n\n// import React, { useState } from 'react';\n\n// const initialState = {\n//   lots: 1,\n//   positionType: 'Buy',\n//   optionType: 'Call',\n//   expiryType: 'Weekly',\n//   selectStrikeCriteria: 'Strike Type',\n//   simpleMomentum: {\n//     type: '',\n//     value: 0\n//   },\n//   trailSL: {\n//     type: 'points',\n//     value: {\n//       instrumentMove: 0,\n//       stopLossMove: 0\n//     }\n//   }\n// };\n\n// const Form = () => {\n//   const [forms, setForms] = useState([initialState]);\n\n//   const handleAddLeg = () => {\n//     setForms([...forms, { ...forms[forms.length - 1] }]);\n//   };\n\n//   const handleDeleteLeg = (index) => {\n//     const updatedForms = [...forms];\n//     updatedForms.splice(index, 1);\n//     setForms(updatedForms);\n//   };\n\n//   const handleChange = (event, index) => {\n//     const { name, value } = event.target;\n//     if (name === 'simpleMomentumType' || name === 'trailSLType') {\n//       const updatedForms = [...forms];\n//       updatedForms[index][name.split('.')[0]][name.split('.')[1]] = value;\n//       setForms(updatedForms);\n//     } else if (name === 'lots') {\n//       const updatedForms = [...forms];\n//       updatedForms[index][name] = parseInt(value, 10);\n//       setForms(updatedForms);\n//     } else {\n//       const updatedForms = [...forms];\n//       updatedForms[index][name] = value;\n//       setForms(updatedForms);\n//     }\n//   };\n\n//   const renderForms = () => {\n//     return forms.map((form, index) => (\n//       <div className=\"form\" key={index}>\n//         <div>\n//           <label>Total lot:</label>\n//           <input\n//             type=\"number\"\n//             name=\"lots\"\n//             value={form.lots}\n//             onChange={(event) => handleChange(event, index)}\n//           />\n//         </div>\n//         <div>\n//           <label>Position:</label>\n//           <select\n//             name=\"positionType\"\n//             value={form.positionType}\n//             onChange={(event) => handleChange(event, index)}\n//           >\n//             <option value=\"Buy\">Buy</option>\n//             <option value=\"Sell\">Sell</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label>Option Type:</label>\n//           <select\n//             name=\"optionType\"\n//             value={form.optionType}\n//             onChange={(event) => handleChange(event, index)}\n//           >\n//             <option value=\"Call\">Call</option>\n//             <option value=\"Put\">Put</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label>Expiry:</label>\n//           <select\n//             name=\"expiryType\"\n//             value={form.expiryType}\n//             onChange={(event) => handleChange(event, index)}\n//           >\n//             <option value=\"Weekly\">Weekly</option>\n//             <option value=\"Monthly\">Monthly</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label>Select Strike Criteria:</label>\n//           <select\n//             name=\"selectStrikeCriteria\"\n//             value={form.selectStrikeCriteria}\n//             onChange={(event) => handleChange(event, index)}\n//           >\n//             <option value=\"Strike Type\">Strike Type</option>\n//             <option value=\"Premium Range\">Premium Range</option>\n//           </select>\n//         </div>\n//         {index > 0 && (\n//           <button onClick={() => handleDeleteLeg(index)}>Delete</button>\n//         )}\n//         <div>\n//           <label>Simple Momentum:</label\nvar _c;\n$RefreshReg$(_c, \"File\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","File","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shweta/form-app/src/Component/File.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction File() {\r\n  return (\r\n    <div>\r\n        {/* <div id=\"root\">\r\n    <div class=\"form\">\r\n      <label for=\"total-lot\">Total lot:</label>\r\n      <input type=\"number\" id=\"total-lot\" name=\"total-lot\" value=\"4\">\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <label for=\"position\">Position:</label>\r\n      <select id=\"position\" name=\"position\">\r\n        <option value=\"Buy\" selected>Buy</option>\r\n        <option value=\"Sell\">Sell</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <label for=\"option-type\">Option Type:</label>\r\n      <select id=\"option-type\" name=\"option-type\">\r\n        <option value=\"Call\" selected>Call</option>\r\n        <option value=\"Put\">Put</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <label for=\"expiry\">Expiry:</label>\r\n      <select id=\"expiry\" name=\"expiry\">\r\n        <option value=\"Weekly\" selected>Weekly</option>\r\n        <option value=\"Monthly\">Monthly</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"form\">\r\n      <label for=\"strike-criteria\">Select Strike Criteria:</label>\r\n      <select id=\"strike-criteria\" name=\"strike-criteria\">\r\n        <option value=\"Strike Type\" selected>Strike Type</option>\r\n      </select>\r\n    </div>\r\n\r\n    <button id=\"add-leg\">Add Leg</button>\r\n    <button id=\"cancel\">Cancel</button>\r\n  </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default File\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const initialState = {\r\n//   lots: 1,\r\n//   positionType: 'Buy',\r\n//   optionType: 'Call',\r\n//   expiryType: 'Weekly',\r\n//   selectStrikeCriteria: 'Strike Type',\r\n//   simpleMomentum: {\r\n//     type: '',\r\n//     value: 0\r\n//   },\r\n//   trailSL: {\r\n//     type: 'points',\r\n//     value: {\r\n//       instrumentMove: 0,\r\n//       stopLossMove: 0\r\n//     }\r\n//   }\r\n// };\r\n\r\n// const Form = () => {\r\n//   const [forms, setForms] = useState([initialState]);\r\n\r\n//   const handleAddLeg = () => {\r\n//     setForms([...forms, { ...forms[forms.length - 1] }]);\r\n//   };\r\n\r\n//   const handleDeleteLeg = (index) => {\r\n//     const updatedForms = [...forms];\r\n//     updatedForms.splice(index, 1);\r\n//     setForms(updatedForms);\r\n//   };\r\n\r\n//   const handleChange = (event, index) => {\r\n//     const { name, value } = event.target;\r\n//     if (name === 'simpleMomentumType' || name === 'trailSLType') {\r\n//       const updatedForms = [...forms];\r\n//       updatedForms[index][name.split('.')[0]][name.split('.')[1]] = value;\r\n//       setForms(updatedForms);\r\n//     } else if (name === 'lots') {\r\n//       const updatedForms = [...forms];\r\n//       updatedForms[index][name] = parseInt(value, 10);\r\n//       setForms(updatedForms);\r\n//     } else {\r\n//       const updatedForms = [...forms];\r\n//       updatedForms[index][name] = value;\r\n//       setForms(updatedForms);\r\n//     }\r\n//   };\r\n\r\n//   const renderForms = () => {\r\n//     return forms.map((form, index) => (\r\n//       <div className=\"form\" key={index}>\r\n//         <div>\r\n//           <label>Total lot:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"lots\"\r\n//             value={form.lots}\r\n//             onChange={(event) => handleChange(event, index)}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Position:</label>\r\n//           <select\r\n//             name=\"positionType\"\r\n//             value={form.positionType}\r\n//             onChange={(event) => handleChange(event, index)}\r\n//           >\r\n//             <option value=\"Buy\">Buy</option>\r\n//             <option value=\"Sell\">Sell</option>\r\n//           </select>\r\n//         </div>\r\n//         <div>\r\n//           <label>Option Type:</label>\r\n//           <select\r\n//             name=\"optionType\"\r\n//             value={form.optionType}\r\n//             onChange={(event) => handleChange(event, index)}\r\n//           >\r\n//             <option value=\"Call\">Call</option>\r\n//             <option value=\"Put\">Put</option>\r\n//           </select>\r\n//         </div>\r\n//         <div>\r\n//           <label>Expiry:</label>\r\n//           <select\r\n//             name=\"expiryType\"\r\n//             value={form.expiryType}\r\n//             onChange={(event) => handleChange(event, index)}\r\n//           >\r\n//             <option value=\"Weekly\">Weekly</option>\r\n//             <option value=\"Monthly\">Monthly</option>\r\n//           </select>\r\n//         </div>\r\n//         <div>\r\n//           <label>Select Strike Criteria:</label>\r\n//           <select\r\n//             name=\"selectStrikeCriteria\"\r\n//             value={form.selectStrikeCriteria}\r\n//             onChange={(event) => handleChange(event, index)}\r\n//           >\r\n//             <option value=\"Strike Type\">Strike Type</option>\r\n//             <option value=\"Premium Range\">Premium Range</option>\r\n//           </select>\r\n//         </div>\r\n//         {index > 0 && (\r\n//           <button onClick={() => handleDeleteLeg(index)}>Delete</button>\r\n//         )}\r\n//         <div>\r\n//           <label>Simple Momentum:</label\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,IAAIA,CAAA,EAAG;EACd,oBACED,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAyCK,CAAC;AAEV;AAACC,EAAA,GA7CQL,IAAI;AA+Cb,eAAeA,IAAI;;AAMn},"metadata":{},"sourceType":"module","externalDependencies":[]}